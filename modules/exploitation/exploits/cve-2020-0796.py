import socket
import struct
import sys

def smbghost_check(ip, port=445):
    print(f"[*] Checking {ip}:{port} for CVE-2020-0796 vulnerability...")

    # SMB negotiation request packet with compression capability set
    packet = bytes.fromhex(
        "000000a4"  # NetBIOS Session length
        "fe534d42"  # SMB2 Header
        "40000000"  # Credit charge + channel seq
        "00000000"  # Status
        "00000000"  # Command/Flags
        "00000000"  # Message ID
        "00000000"  # Reserved
        "00000000"  # Tree ID
        "00000000"  # Session ID
        "00000000"  # Signature (8 bytes x2)
        "00000000"
        "00000024"  # Structure size
        "00000100"  # Dialect count
        "00000000"  # Security mode/reserved
        "00000000"  # Capabilities
        "00000000"  # GUID
        "00000000"
        "00000000"
        "00000000"
        "00000000"  # Negotiate Context Count / Offset
        "00000000"  # Reserved
        "02021002"  # Dialects: 0x0202, 0x2102 (SMB 3.1.1)
        "00000000"
    )

    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(3)
        s.connect((ip, port))
        s.send(packet)
        data = s.recv(1024)
        s.close()

        # Vulnerable systems will respond with SMB2 NEGOTIATE response
        if b"\xfeSMB" in data and b"\x11\x03\x00\xc0" in data:
            print(f"[+] {ip} is likely VULNERABLE to SMBGhost (CVE-2020-0796)")
        else:
            print(f"[-] {ip} does not appear vulnerable.")
    except Exception as e:
        print(f"[!] Failed to connect: {e}")

def main():
    if len(sys.argv) != 2:
        print(f"Usage: python3 {sys.argv[0]} <target_ip>")
        sys.exit(1)
    target_ip = sys.argv[1]
    smbghost_check(target_ip)

if __name__ == "__main__":
    main()

